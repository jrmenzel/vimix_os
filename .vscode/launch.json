{
    "version": "0.2.0",
    // need extension Native Debug
    // run "make qemu-gdb" in a terminal, then "Run and Debug" in VSCode
    "configurations": [
        {
            // debug the kernel
            "name": "kernel qemu RISCV",
            "type": "cppdbg",
            "request": "launch",
            "program": "build/kernel-vimix",
            "cwd": "${workspaceRoot}",
            "miDebuggerPath": "riscv64-elf-gdb",
            "miDebuggerServerAddress": "127.0.0.1:26002",
            "MIMode": "gdb",
            "stopAtEntry": false,
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": false
                }
            ]
        },
        {
            // call openocd -f tools/openocd/spike.cfg
            "name": "kernel Spike external OpenOCD",
            "type": "cppdbg",
            "request": "launch",
            "program": "build/kernel-vimix",
            "cwd": "${workspaceRoot}",
            "miDebuggerPath": "riscv64-elf-gdb",
            "miDebuggerServerAddress": "127.0.0.1:3333",
            "MIMode": "gdb",
            "stopAtEntry": true,
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": false
                }
            ]
        },
        {
            // debug a user space application
            "name": "userspace: init",
            "type": "cppdbg",
            "request": "launch",
            "program": "build/root/usr/bin/init",
            "cwd": "${workspaceRoot}",
            "miDebuggerPath": "riscv64-elf-gdb",
            "miDebuggerServerAddress": "127.0.0.1:26002",
            "MIMode": "gdb",
            "stopAtEntry": false,
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": false
                }
            ]
        },
        {
            // debug a user space application
            "name": "userspace: sh",
            "type": "cppdbg",
            "request": "launch",
            "program": "build/root/usr/bin/sh",
            "cwd": "${workspaceRoot}",
            "miDebuggerPath": "riscv64-elf-gdb",
            "miDebuggerServerAddress": "127.0.0.1:26002",
            "MIMode": "gdb",
            "stopAtEntry": false,
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": false
                }
            ]
        },
        {
            // debug a user space application
            "name": "userspace: usertests",
            "type": "cppdbg",
            "request": "launch",
            "program": "build/root/usr/bin/usertests",
            "cwd": "${workspaceRoot}",
            "miDebuggerPath": "riscv64-elf-gdb",
            "miDebuggerServerAddress": "127.0.0.1:26002",
            "MIMode": "gdb",
            "stopAtEntry": false,
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": false
                }
            ]
        },
        {
            // debug a user space application on the host
            // note: fork only follows the first child, so set a specific test
            // when debuggign the usertests
            "name": "host: usertests",
            "program": "${workspaceRoot}/build_host/root/usr/bin/usertests",
            "args": ["lseek_test"],
            "cwd": "${workspaceRoot}",
            "type": "cppdbg",
            "request": "launch",
            "MIMode": "gdb",
            "stopAtEntry": false,
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    // https://sourceware.org/gdb/onlinedocs/gdb/Forks.html
                    "description": "Fork follows Child process",
                    "text": "set follow-fork-mode child",
                    "ignoreFailures": true
                },
                {
                    // https://sourceware.org/gdb/onlinedocs/gdb/Forks.html
                    "description": "Fork will keep the other process attached to debugger",
                    "text": "set detach-on-fork off",
                    "ignoreFailures": true
                }
            ]
        },
        {
            // debug a user space application on the host
            "name": "host: mkfs",
            "program": "${workspaceRoot}/build_host/root/usr/bin/mkfs",
            "args": ["fs.img", "--in", "foo"],
            "cwd": "${workspaceRoot}",
            "type": "cppdbg",
            "request": "launch",
            "MIMode": "gdb",
            "stopAtEntry": false,
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    // https://sourceware.org/gdb/onlinedocs/gdb/Forks.html
                    "description": "Fork follows Child process",
                    "text": "set follow-fork-mode child",
                    "ignoreFailures": true
                },
                {
                    // https://sourceware.org/gdb/onlinedocs/gdb/Forks.html
                    "description": "Fork will keep the other process attached to debugger",
                    "text": "set detach-on-fork off",
                    "ignoreFailures": true
                }
            ]
        },
        {
            // debug a user space application on the host
            "name": "host: fsck.xv6fs",
            "program": "${workspaceRoot}/build_host/root/usr/bin/fsck.xv6fs",
            "args": ["build/filesystem.img"],
            "cwd": "${workspaceRoot}",
            "type": "cppdbg",
            "request": "launch",
            "MIMode": "gdb",
            "stopAtEntry": false,
        }
    ]
}
